{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"ProjectName": {
			"type": "string",
			"allowedValues": [
				"SecOps",
				"nMrkt",
				"Default"
			],
			"metadata": {
				"description": "Select your Project name from the list (if present), otherwise select SecOps"
			}
		},
		"virtualMachineSize": {
			"type": "string",
			"defaultValue": "Standard_D2s_v3",
			"allowedValues": [
				"Standard_D2s_v3",
				"Standard_B2s"
			],
			"metadata": {
				"description": "VM size, please choose a size which allow 2 NICs."
			}
		},
		"virtualMachineNumber": {
			"type": "string",
			"defaultValue": "1",
			"allowedValues": [
				"1",
				"2"
			],
			"metadata": {
				"description": "OPN NVA Manchine Name"
			}
		},
		"PublicIPAddressSku": {
			"type": "string",
			"defaultValue": "Basic",
			"allowedValues": [
				"Basic",
				"Standard"
			],
			"metadata": {
				"description": "Specify Public IP SKU either Basic (lowest cost) or Standard (Required for HA LB)"
			}
		},
		"ProjectNetworkCIDROctet": {
			"type": "string",
			"defaultValue": "00",
			"metadata": {
				"description": "Network CIDR octet, check available address list from the corresponding documenation https://pgga-es.atlassian.net/wiki/spaces/NPD/pages/1820689753/nMarket+NewSec+Infrastructure+IP-Subnets-Networking"
			}
		},
		"NetworkCIDROctet": {
			"type": "string",
			"defaultValue": "00",
			"metadata": {
			"description": "Network CIDR octet, check available address list from the corresponding documenation https://pgga-es.atlassian.net/wiki/spaces/NPD/pages/1820689753/nMarket+NewSec+Infrastructure+IP-Subnets-Networking"
			}
		},
		"OpnSenseVersion": {
			"type": "string",
			"defaultValue": "25.1",
			"allowedValues": [
				"21.7",
				"22.1",
				"22.7",
				"23.1",
				"23.7",
				"24.1",
				"24.7",
				"25.1"
			],
			"metadata": {
				"description": "OpnSense Release version"
			}
		},
		"WALinuxVersion": {
			"type": "string",
			"defaultValue": "2.12.0.4",
			"allowedValues": [
				"2.12.0.2",
				"2.12.0.4"
			],
			"metadata": {
				"description": "Azure WALinux agent Version"
			}
		}
	},
	"variables": {
		"diagnosticsStorageAccountName": "nmrktlogandmondev",
		"extensionName": "CustomScript",
		"location": "[resourceGroup().location]",
		"networkSecurityGroupName": "Only-RFC-1918",
		"nextHopAddress": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.36')]",
		"nic1": "[concat(variables('virtualMachineName'), '-nic1')]",
		"nic2": "[concat(variables('virtualMachineName'), '-nic2')]",
		"OpnConfigFile": "config.xml",
		"OpnScriptURI": "https://raw.githubusercontent.com/oleksandrmeleshchuk-epm/Azure-OpnSense/main/OpnSense/scripts/",
		"PeeringNetwork1Name": "buildAgents-Krakow-vnet",
		"PeeringNetwork1RGName": "nMarket-buildAgents-Krakow-37563f69",
		"PeeringNetwork1SubID": "37563f69-f5ca-443e-a71f-df1a7acb739f",
		"PeeringNetwork1Location": "North Europe",
		"PeeringNetwork2Name": "ABB-nMarket-Logging-and-Monitoring-vnet",
		"PeeringNetwork2RGName": "ABB-nMarket-Logging-and-Monitoring",
		"PeeringNetwork2SubID": "37563f69-f5ca-443e-a71f-df1a7acb739f",
		"PeeringNetwork2Location": "North Europe",
		"PeeringNetworkName1": "[variables('PeeringNetwork1Name')]",
		"PeeringNetworkName2": "[variables('PeeringNetwork2Name')]",
		"privateIPAllocationMethod": "[if(equals(parameters('ProjectName'), 'SecOps'), 'Static', 'Dynamic')]",
		"PublicIPAddress": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]",
		"publicIPAddressName": "[concat(variables('VirtualMachineName'), '-pip')]",
		"RGName": "[toLower(resourceGroup().name)]",
		"routeTableName": "Global-General",
		"SecOpsnextHopAddress": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.39')]",
		"SecOpsNIC1Address": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.39')]",
		"SecOpsNIC2Address": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.7')]",
		"ShellScriptName": "configureopnsense.sh",
		"SubID": "[subscription().subscriptionId]",
		"SubIDPeeringNetworkName1": "[variables('PeeringNetwork1SubID')]",
		"LocationPeeringNetworkName1": "[variables('PeeringNetwork1Location')]",
		"SubIDPeeringNetworkName2": "[variables('PeeringNetwork2SubID')]",
		"LocationPeeringNetworkName2": "[variables('PeeringNetwork2Location')]",
		"SubIDPeeringRGName1": "[variables('PeeringNetwork1RGName')]",
		"SubIDPeeringRGName2": "[variables('PeeringNetwork2RGName')]",
		"subnet1Name": "GatewaySubnet",
		"subnet2Name": "firewall-frontend",
		"subnet2RefID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet2Name'))]",
		"subnet3Name": "management",
		"subnet4Name": "firewall-backend",
		"subnet4RefID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet4Name'))]",
		"subnetAddressSpace": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.0/24')]",
		"subnetfirewall-backend": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.32/27')]",
		"subnetfirewall-frontend": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.0/27')]",
		"subnetGatewaySubnet": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.128/26')]",
		"subnetmanagement": "[concat('10.', parameters('ProjectNetworkCIDROctet'), '.', parameters('NetworkCIDROctet'), '.64/26')]",
		"TempPassword": "[concat('P', uniqueString(deployment().name), '!')]",
		"TempUsername": "devops",
		"VirtualMachineName": "[concat(variables('RGName'), '-fw', parameters('virtualMachineNumber'))]",
		"virtualNetworkName": "[concat(variables('RGName'), '-vnet')]"
	},
	"resources": [
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2021-03-01",
			"comments": "This is the virtual machine that you're building.",
			"dependsOn": [
				"[concat('Microsoft.Network/networkInterfaces/', variables('nic1'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('nic2'))]"
			],
			"location": "[variables('location')]",
			"name": "[variables('virtualMachineName')]",
			"plan": {
				"name": "14_1-release-amd64-gen2-zfs",
				"publisher": "thefreebsdfoundation",
				"product": "freebsd-14_1"
			},
			"properties": {
				"osProfile": {
					"computerName": "[variables('virtualMachineName')]",
					"adminUsername": "[variables('TempUsername')]",
					"adminPassword": "[variables('TempPassword')]"
				},
				"hardwareProfile": {
					"vmSize": "[parameters('virtualMachineSize')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "thefreebsdfoundation",
						"offer": "freebsd-14_1",
						"sku": "14_1-release-amd64-gen2-zfs",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "fromImage",
						"name": "[concat(variables('virtualMachineName'), '-disk')]"
					},
					"dataDisks": []
				},
				"networkProfile": {
					"networkInterfaces": [
					{
						"properties": {
							"primary": true
						},
						"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2'))]"
					},
					{
						"properties": {
							"primary": false
						},
						"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1'))]"
					}
					]
				}
			}
		},
		{
			"type": "Microsoft.Network/routeTables",
			"apiVersion": "2015-06-15",
			"location": "[variables('location')]",
			"name": "[variables('routeTableName')]",
			"properties": {
				"routes": [
					{
						"name": "ToInternet",
						"properties": {
							"addressPrefix": "0.0.0.0/0",
							"nextHopType": "VirtualAppliance",
							"nextHopIpAddress": "[if(equals(parameters('ProjectName'), 'SecOps'), variables('SecOpsnextHopAddress'), variables('nextHopAddress'))]"
						}
					},
					{
						"name": "ToVPN",
						"properties": {
							"addressPrefix": "[concat('172.16.', parameters('NetworkCIDROctet'), '.0/24')]",
							"nextHopType": "VirtualNetworkGateway"
						}
					},
					{
						"name": "VNETLocal",
						"properties": {
							"addressPrefix": "[variables('subnetAddressSpace')]",
							"nextHopType": "VnetLocal"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2024-05-01",
			"comments": "This will build a Virtual Network.",
			"dependsOn": [
				"[concat('Microsoft.Network/routeTables/', variables('routeTableName'))]",
				"[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
			],
			"location": "[variables('location')]",
			"name": "[variables('virtualNetworkName')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
					"[variables('subnetAddressSpace')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnet1Name')]",
						"properties": {
							"addressPrefix": "[variables('subnetGatewaySubnet')]"
						}
					},
					{
						"name": "[variables('subnet2Name')]",
						"properties": {
							"addressPrefix": "[variables('subnetfirewall-frontend')]"
						}
					},
					{
						"name": "[variables('subnet3Name')]",
						"properties": {
							"addressPrefix": "[variables('subnetmanagement')]",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
							}
						}
					},
					{
						"name": "[variables('subnet4Name')]",
						"properties": {
							"addressPrefix": "[variables('subnetfirewall-backend')]",
							"networkSecurityGroup": {
								"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
							}
						}
					}
				]
			},
			"resources": [
			{
				"type": "virtualNetworkPeerings",
				"apiVersion": "2024-05-01",
				"name": "[concat(variables('virtualNetworkName'), '-to-', variables('PeeringNetworkName1'))]",
				"condition": "[not(equals(parameters('ProjectName'), 'Default'))]",
				"location": "[resourceGroup().location]",
				"dependsOn": [
					"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
				],
				"properties": {
				"allowVirtualNetworkAccess": true,
				"allowForwardedTraffic": false,
				"allowGatewayTransit": false,
				"useRemoteGateways": false,
				"remoteVirtualNetwork": {
					"id": "[concat('/subscriptions/', variables('SubIDPeeringNetworkName1'), '/resourceGroups/', variables('SubIDPeeringRGName1'), '/providers/Microsoft.Network/virtualNetworks/', variables('PeeringNetworkName1'))]"
				}
				}
			},
			{
				"type": "virtualNetworkPeerings",
				"apiVersion": "2024-05-01",
				"name": "[concat(variables('virtualNetworkName'), '-to-', variables('PeeringNetworkName2'))]",
				"condition": "[not(equals(parameters('ProjectName'), 'Default'))]",
				"location": "[resourceGroup().location]",
				"dependsOn": [
					"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
				],
				"properties": {
				"allowVirtualNetworkAccess": true,
				"allowForwardedTraffic": false,
				"allowGatewayTransit": false,
				"useRemoteGateways": false,
				"remoteVirtualNetwork": {
					"id": "[concat('/subscriptions/', variables('SubIDPeeringNetworkName2'), '/resourceGroups/', variables('SubIDPeeringRGName2'), '/providers/Microsoft.Network/virtualNetworks/', variables('PeeringNetworkName2'))]"
				}
				}
			}
			]
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2022-09-01",
			"name": "[concat(substring(variables('PeeringNetworkName1'), 0, min(30, length(variables('PeeringNetworkName1')))), '-to-', substring(variables('virtualNetworkName'), 0, min(30, length(variables('virtualNetworkName')))))]",
			"condition": "[not(equals(parameters('ProjectName'), 'Default'))]",
			"subscriptionId": "[variables('SubIDPeeringNetworkName1')]",
			"resourceGroup": "[variables('SubIDPeeringRGName1')]",
			"copy": {
                "name": "Vnets",
                "count": "1"
            },
			"properties": {
				"mode": "Incremental",
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"parameters": {
					"location": {
						"value": "[variables('LocationPeeringNetworkName1')]"
					},
					"PeeringNetworkName": {
						"value": "[variables('PeeringNetworkName1')]"
					},
					"virtualNetworkName": {
						"value": "[variables('virtualNetworkName')]"
					},
					"SubID": {
						"value": "[variables('SubID')]"
					},
					"RGName": {
						"value": "[variables('RGName')]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"location": {
							"type": "string"
						},
						"PeeringNetworkName": {
							"type": "string"
						},
						"virtualNetworkName": {
							"type": "string"
						},
						"SubID": {
							"type": "string"
						},
						"RGName": {
							"type": "string"
						}
					},
					"variables": {},
					"resources": [
						{
							"type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
							"apiVersion": "2024-05-01",
							"name": "[concat(parameters('PeeringNetworkName'), '-to-', parameters('virtualNetworkName'))]",
							"location": "[parameters('location')]",
							"properties": {
								"allowVirtualNetworkAccess": true,
								"allowForwardedTraffic": false,
								"allowGatewayTransit": false,
								"useRemoteGateways": false,
								"remoteVirtualNetwork": {
									"id": "[concat('/subscriptions/', parameters('SubID'), '/resourceGroups/', parameters('RGName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
								}
							}
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2022-09-01",
			"name": "[concat(substring(variables('PeeringNetworkName2'), 0, min(30, length(variables('PeeringNetworkName2')))), '-to-', substring(variables('virtualNetworkName'), 0, min(30, length(variables('virtualNetworkName')))))]",
			"subscriptionId": "[variables('SubIDPeeringNetworkName2')]",
			"resourceGroup": "[variables('SubIDPeeringRGName2')]",
			"copy": {
                "name": "Vnets",
                "count": "1"
            },
			"properties": {
				"mode": "Incremental",
				"expressionEvaluationOptions": {
					"scope": "inner"
				},
				"parameters": {
					"location": {
						"value": "[variables('LocationPeeringNetworkName2')]"
					},
					"PeeringNetworkName": {
						"value": "[variables('PeeringNetworkName2')]"
					},
					"virtualNetworkName": {
						"value": "[variables('virtualNetworkName')]"
					},
					"SubID": {
						"value": "[variables('SubID')]"
					},
					"RGName": {
						"value": "[variables('RGName')]"
					}
				},
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"location": {
							"type": "string"
						},
						"PeeringNetworkName": {
							"type": "string"
						},
						"virtualNetworkName": {
							"type": "string"
						},
						"SubID": {
							"type": "string"
						},
						"RGName": {
							"type": "string"
						}
					},
					"variables": {},
					"resources": [
						{
							"type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
							"apiVersion": "2024-05-01",
							"name": "[concat(parameters('PeeringNetworkName'), '-to-', parameters('virtualNetworkName'))]",
							"location": "[parameters('location')]",
							"properties": {
								"allowVirtualNetworkAccess": true,
								"allowForwardedTraffic": false,
								"allowGatewayTransit": false,
								"useRemoteGateways": false,
								"remoteVirtualNetwork": {
									"id": "[concat('/subscriptions/', parameters('SubID'), '/resourceGroups/', parameters('RGName'), '/providers/Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
								}
							}
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2024-05-01",
			"comments": "This will be your Primary NIC",
			"dependsOn": [
				"[variables('publicIpAddressName')]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"location": "[variables('location')]",
			"name": "[if(equals(parameters('ProjectName'), 'SecOps'), variables('nic2'), variables('nic1'))]",
			"properties": {
				"enableIPForwarding": true,
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"subnet": {
								"id": "[variables('subnet2RefID')]"
							},
							"privateIPAddress": "[if(equals(parameters('ProjectName'), 'SecOps'), variables('SecOpsNIC2Address'), json('null'))]",
							"privateIPAllocationMethod": "[variables('privateIPAllocationMethod')]",
							"publicIpAddress": {
								"id": "[variables('PublicIPAddress')]"
							}
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2017-06-01",
			"comments": "This will be your Secondary NIC",
			"dependsOn": [
				"[variables('publicIpAddressName')]",
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
			],
			"location": "[variables('location')]",
			"name": "[if(equals(parameters('ProjectName'), 'SecOps'), variables('nic1'), variables('nic2'))]",
			"properties": {
				"enableIPForwarding": true,
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"subnet": {
								"id": "[variables('subnet4RefID')]"
							},
							"privateIPAddress": "[if(equals(parameters('ProjectName'), 'SecOps'), variables('SecOpsNIC1Address'), json('null'))]",
							"privateIPAllocationMethod": "[variables('privateIPAllocationMethod')]"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/publicIPAddresses",
			"apiVersion": "2024-05-01",
			"comments": "Public IP for your WAN NIC",
			"location": "[variables('location')]",
			"name": "[variables('publicIpAddressName')]",
			"properties": {
				"publicIPAllocationMethod": "Static"
			},
			"sku": {
				"name": "[parameters('PublicIPAddressSku')]",
				"tier": "Regional"
			}
		},
		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2016-09-01",
			"comments": "Network Security Group (NSG) for your Primary NIC",
			"location": "[variables('location')]",
			"name": "[variables('networkSecurityGroupName')]",
			"properties": {
				"securityRules": [
					{
						"name": "Inbound-10",
						"properties": {
							"priority": 100,
							"sourceAddressPrefix": "10.0.0.0/8",
							"protocol": "*",
							"destinationPortRange": "*",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					},
					{
						"name": "Inbound-172",
						"properties": {
							"priority": 110,
							"sourceAddressPrefix": "172.16.0.0/12",
							"protocol": "*",
							"destinationPortRange": "*",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					},
					{
						"name": "Inbound-192",
						"properties": {
							"priority": 120,
							"sourceAddressPrefix": "192.168.0.0/16",
							"protocol": "*",
							"destinationPortRange": "*",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "*"
						}
					},
					{
						"name": "Outbound-10",
						"properties": {
							"priority": 100,
							"sourceAddressPrefix": "*",
							"protocol": "*",
							"destinationPortRange": "*",
							"access": "Allow",
							"direction": "Outbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "10.0.0.0/8"
						}
					},
					{
						"name": "Outbound-172",
						"properties": {
							"priority": 110,
							"sourceAddressPrefix": "*",
							"protocol": "*",
							"destinationPortRange": "*",
							"access": "Allow",
							"direction": "Outbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "172.16.0.0/12"
						}
					},
					{
						"name": "Outbound-192",
						"properties": {
							"priority": 120,
							"sourceAddressPrefix": "*",
							"protocol": "*",
							"destinationPortRange": "*",
							"access": "Allow",
							"direction": "Outbound",
							"sourcePortRange": "*",
							"destinationAddressPrefix": "192.168.0.0/16"
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2024-07-01",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('virtualMachineName'))]"
			],
			"location": "[variables('location')]",
			"name": "[concat(variables('virtualMachineName'), '/', variables('extensionName'))]",
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.5",
				"autoUpgradeMinorVersion": false,
				"settings": {
					"fileUris": [
						"[concat(variables('OPNScriptURI'),variables('ShellScriptName'))]"
					],
					"commandToExecute": "[concat('sh ',variables('ShellScriptName'),' ',variables('OPNConfigFile'),' ',parameters('OpnSenseVersion'),' ',parameters('ProjectName'),' ',parameters('ProjectNetworkCIDROctet'),' ',parameters('NetworkCIDROctet'),' ',variables('RGName'),' ',variables('virtualMachineName'),' ',variables('TempPassword'),' ',parameters('WALinuxVersion'))]"
				}
			}
		}
	],
	"outputs": {
		"password": {
			"type": "string",
			"value": "[variables('TempPassword')]"
		}
	}
}